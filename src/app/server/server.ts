/**
 * NgUniversalSkeleton
 *
 * WARNING: The source code in this file is protected by copyright laws,
 * unauthorized use, duplication or redistribution may result in civil
 * liability and criminal prosecution.
 *
 * @copyright Copyright (c) 2017, Yassel Avila Gil (http://yasselavila.com)
 * @author    Yassel Avila Gil (yassel.avila@gmail.com)
 */

/* Server specific version of Zone.js */
import 'zone.js/dist/zone-node';

import * as process from 'process';
import * as express from 'express';
import { Request, Response, Application } from 'express';
import { ngExpressEngine } from '@nguniversal/express-engine';

/* The server bundle is loaded here, it's why you don't want a changing hash in it */
const appServer: any = require('./main.bundle');

/* Server-side rendering */
function angularRouter(req: Request, res: Response): void {
  res.render('index', {
    req,
    res,
    providers: [{
      provide: 'serverUrl',
      useValue: `${req.protocol}://${req.get('host')}`
    }]
  });
}

const app: Application = express();

/* Root route before static files, or it will serve a static index.html, without pre-rendering */
app.get('/', angularRouter);

/* Serve the static files generated by the CLI (index.html, CSS? JS, assets...) */
app.use(express.static(`${__dirname}/..`));

/* Configure Angular Express engine */
app.engine('html', ngExpressEngine({
  bootstrap: appServer.AppServerModuleNgFactory
}));

app.set('view engine', 'html');
app.set('views', `${__dirname}/..`);

/* Direct all routes to index.html, where Angular will take care of routing */
app.get('*', angularRouter);

const isProd: boolean = ('production' === (process.env.NODE_ENV || null));
const portData: string = process.env.PORT || '3000';
const port: number = parseInt(portData, 10);

app.listen(port, () => {
  if (!isProd) {
    console.log(`Listening on http://localhost:3000`);
  }
});
